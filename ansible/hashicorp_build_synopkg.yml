---
- hosts: all
  vars:
    HASHICORP_ZIP_FILE: {{syno_package_name}}_{{hashicorp_app_version}}_{{hashicorp_app_os}}_{{hashicorp_app_arch}}.zip	
    HASHICORP_APP_URL: "https://releases.hashicorp.com/{{syno_package_name}}/{{hashicorp_app_version}}/{{HASHICORP_ZIP_FILE}}"
  become: yes
  gather_facts: yes

  pre_tasks:

  - name: Debug
    debug:
      msg: Going to download: {{HASHICORP_APP_URL}}

  - name: Update apt cache if needed.
    apt: update_cache=yes cache_valid_time=3600

  - name: Get software for apt repository management.
    apt:
      name:
        - python3
        - python3-pip
        - cifs-utils
        - git
      state: present

  - name: "Check existence Synology Packaging build scripts"
    stat:
      path: /toolkit/pkgscripts-ng
    register: stat_pkgscripts

  - name: "Pull the Synology Packaging build scripts Git repository"
    git:
      repo: 'https://github.com/SynologyOpenSource/pkgscripts-ng.git'
      dest: /toolkit/pkgscripts-ng
      version: master
    when: not stat_pkgscripts.stat.exists

  - name: "Checkout the DSM 7.0 scripts"
    shell:
      chdir: /toolkit/pkgscripts-ng
      cmd: git checkout DSM7.0

  - name: "Check existence of avoton chroot environment"
    stat:
      path: "/toolkit/build_env/ds.avoton-7.0"
    register: stat_reg_ds_build_target_architecture_name

  - name: "Deploy the avoton chroot build environment"
    shell:
      chdir: /toolkit/pkgscripts-ng 
      cmd: ./EnvDeploy -v 7.0 -p avoton
    when: not stat_reg_ds_build_target_architecture_name.stat.exists

  - name: "Make sure the hashicorp app syno prebuilt exists."
    ansible.builtin.file:
      path: /toolkit/prebuilt/{{syno_package_name}}
      state: directory

  - name: "Pull the Synology ATVANZT Build Git repository"
    git:
      repo: 'https://github.com/atvanzt/synology.git'
      dest: "/toolkit/synology_{{syno_package_name}}_package_sources"
      version: develop 

  - name: "Copy Synology Hashicorp app package environment into Synology build toolkit for DSM 7.0"
    ansible.builtin.copy:
      src: "/toolkit/synology_{{syno_package_name}}_package_sources/synology/source"
      dest: /toolkit
      directory_mode:
      remote_src: yes

  - name: "Create the bin directory for the Hashicorp app binary" 
    ansible.builtin.file:
      path: "/toolkit/source/{{syno_package_name}}/package/bin"
      state: directory
 
  - name: "Download and unarchive Hashicorp released archive directly into the Synology packaging environment setup."
    ansible.builtin.unarchive:
      src: "{{HASHICORP_APP_URL}}" 
      dest: "/toolkit/source/{{syno_package_name}}/package/bin"
      remote_src: yes

  - name: "Inject correct Hashicorp app version number for app name synology package INFO"
    ansible.builtin.replace:
      path: "/toolkit/source/{{syno_package_name}}/INFO.sh"
      regexp: '{put_synology_package_version_here}'
      replace: "{{hashicorp_app_version}}"

  - name: "Execute the Synology build command to create the synology Hashicorp package."
    shell:
      chdir: /toolkit/pkgscripts-ng
      cmd: "./PkgCreate.py -v 7.0 -p avoton {{syno_package_name}}"
